if(WIN32)
  string(REPLACE "\\" "/" HOME $ENV{USERPROFILE})
else()
  set(HOME $ENV{HOME})
endif()

set(CMAKE_PREFIX_PATH "${HOME}/local;${CMAKE_PREFIX_PATH}")

if(DEFINED ENV{VCPKG_ROOT})
  if(WIN32)
    string(REPLACE "\\" "/" VCPKG_ROOT $ENV{VCPKG_ROOT})
  else()
    set(VCPKG_ROOT $ENV{VCPKG_ROOT})
  endif()
  include("${VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake")
endif()

if(DEFINED CMAKE_SYSTEM_NAME)
  set(TCSYS ${CMAKE_SYSTEM_NAME})
elseif(DEFINED CMAKE_HOST_SYSTEM_NAME)
  set(TCSYS ${CMAKE_HOST_SYSTEM_NAME})
endif()

if(ENV{CC} MATCHES "clang" OR ENV{CXX} MATCHES "clang" OR CMAKE_C_COMPILER MATCHES "clang" OR CMAKE_CXX_COMPILER MATCHES "clang")
  set(TCCOMPILER clang)
elseif(ENV{CC} MATCHES "gcc" OR ENV{CXX} MATCHES "g\\+\\+" OR CMAKE_C_COMPILER MATCHES "gcc" OR CMAKE_CXX_COMPILER MATCHES "g\\+\\+")
  set(TCCOMPILER gcc)
elseif(TCSYS STREQUAL "Linux")
  set(TCCOMPILER gcc)
elseif(TCSYS STREQUAL "Windows")
  set(TCCOMPILER msvc)
elseif(TCSYS MATCHES "Darwin|Android|iOS|Emscripten")
  set(TCCOMPILER clang)
endif()

if(TCCOMPILER STREQUAL clang)
  add_compile_options(-fcolor-diagnostics)
elseif(TCCOMPILER STREQUAL gcc)
  add_compile_options(-fdiagnostics-color=always)
elseif(TCCOMPILER STREQUAL msvc)
  add_compile_options(/diagnostics:caret)
endif()

unset(TCCOMPILER)
unset(TCSYS)

set(CMAKE_EXPORT_COMPILE_COMMANDS ON)