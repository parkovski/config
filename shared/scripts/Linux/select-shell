#!/bin/bash

if [[ "$1" == "-h" || "$1" == "--help" ]]; then
  echo "Usage: select-shell [shell] [start-dir]."
  echo "  If shell is empty or '-', the platform default shell is used."
  echo "  If shell is '-a', the alternative shell is chosen as follows:"
  echo "    On WSL, the default Linux shell is used."
  echo "    Otherwise, PowerShell is used if available."
  echo "  If start-dir is empty, the home folder is used."
  exit 1
fi

. $(dirname "${BASH_SOURCE[0]}")/../../lib/sh/os.sh

if [[ x"$2" == "x" ]]; then
  cd
elif [[ -d "$2" ]]; then
  cd "$2"
elif [[ "$IS_WSL" == "1" ]]; then
  wsldir=$(wslpath -u "$2")
  if [[ -d "$wsldir" ]]; then
    cd "$wsldir"
  fi
fi

if [[ x"$SHELL" == "x" ]]; then
  if [[ -f /bin/zsh ]]; then
    export SHELL=/bin/zsh
  elif [[ -f /bin/bash ]]; then
    export SHELL=/bin/bash
  elif [[ -f /bin/sh ]]; then
    export SHELL=/bin/sh
  else
    echo "No shell found!" >&2
    exit 1
  fi
fi

if [[ x"$1" == "x" || "$1" == "-" ]]; then
  # Platform default shell.
  if [[ "$IS_WSL" == "1" ]]; then
    shell="pwsh.exe"
  else
    shell="$SHELL"
  fi
elif [[ "$1" == "-a" ]]; then
  # Alternative shell.
  if [[ "$IS_WSL" == "1" ]]; then
    shell="$SHELL"
  else
    shell="$(/usr/bin/env pwsh)"
    if [[ ! -x "$1" ]]; then
      shell="$SHELL"
    fi
  fi
elif [[ ! -x $(which "$1") ]]; then
  # Oops.
  echo "Shell does not exist!" >&2
  exit 1
else
  # Custom shell.
  shell="$1"
fi

if [[ "$shell" =~ pwsh(\.exe)?$ ]]; then
  if [[ ! "$2" ]]; then
    # Default to home dir.
    exec "$shell" -wd "~"
  elif [[ "$IS_WSL" == "1" && -d "$2" ]]; then
    # WSL path.
    exec "$shell" -wd "$(wslpath -w $2)"
  else
    # Native path
    exec "$shell" -wd "$2"
  fi
elif [[ "$shell" =~ cmd\.exe$ ]]; then
  if [[ ! "$2" ]]; then
    exec "$shell" /k cd %USERPROFILE%
  elif [[ "$IS_WSL" == "1" && -d "$2" ]]; then
    exec "$shell" /k cd "$(wslpath -w $2)"
  else
    exec "$shell" /k cd "$2"
  fi
fi

exec "$shell" -l
